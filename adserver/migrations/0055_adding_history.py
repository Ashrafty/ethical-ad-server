# Generated by Django 2.2.24 on 2021-06-15 19:06
import datetime
import uuid

import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import jsonfield.fields
import simple_history.models
from django.conf import settings
from django.db import migrations
from django.db import models

import adserver.models
import adserver.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('adserver', '0054_add_payout_status_dates'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalPublisherPayout',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Amount')),
                ('date', models.DateTimeField(verbose_name='Payout date')),
                ('method', models.CharField(blank=True, choices=[('stripe', 'Stripe (Bank transfer, debit card)'), ('paypal', 'PayPal'), ('opencollective', 'Open Collective'), ('other', 'Other')], default=None, max_length=100, null=True)),
                ('note', models.TextField(blank=True, help_text='A publisher-visible note about the payout', null=True, verbose_name='Note')),
                ('attachment', models.TextField(blank=True, help_text='A publisher-visible attachment such as a receipt', max_length=255, null=True, verbose_name='Attachment')),
                ('start_date', models.DateField(help_text='First day of paid period', null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='Last day of paid period', null=True, verbose_name='End Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('hold', 'On hold'), ('emailed', 'Email sent'), ('paid', 'Payment sent')], default='pending', help_text='Status of this payout', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='adserver.Publisher')),
            ],
            options={
                'verbose_name': 'historical publisher payout',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublisherGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(help_text='Visible to advertisers', max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Publisher group slug')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical publisher group',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPublisher',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Publisher Slug')),
                ('revenue_share_percentage', models.FloatField(default=70.0, help_text='Percentage of advertising revenue shared with this publisher', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('default_keywords', models.CharField(blank=True, default='', help_text='A CSV of default keywords for this property. Used for targeting.', max_length=250, verbose_name='Default keywords')),
                ('unauthed_ad_decisions', models.BooleanField(default=True, help_text='Whether this publisher allows unauthenticated ad decision API requests (eg. JSONP)')),
                ('allow_paid_campaigns', models.BooleanField(default=False, verbose_name='Allow paid campaigns')),
                ('allow_affiliate_campaigns', models.BooleanField(default=False, verbose_name='Allow affiliate campaigns')),
                ('allow_community_campaigns', models.BooleanField(default=True, help_text='These are unpaid campaigns that support non-profit projects in our community. Shown only when no paid ads are available', verbose_name='Allow community campaigns')),
                ('allow_house_campaigns', models.BooleanField(default=True, help_text='These are ads for EthicalAds itself. Shown only when no paid ads are available.', verbose_name='Allow house campaigns')),
                ('payout_method', models.CharField(blank=True, choices=[('stripe', 'Stripe (Bank transfer, debit card)'), ('paypal', 'PayPal'), ('opencollective', 'Open Collective'), ('other', 'Other')], default=None, max_length=100, null=True)),
                ('stripe_connected_account_id', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Stripe connected account ID')),
                ('open_collective_name', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Open Collective name')),
                ('paypal_email', models.EmailField(blank=True, default=None, max_length=254, null=True, verbose_name='PayPal email address')),
                ('record_views', models.BooleanField(default=False, help_text='Record each ad view from this publisher to the database')),
                ('record_placements', models.BooleanField(default=False, help_text='Record placement impressions for this publisher')),
                ('render_pixel', models.BooleanField(default=False, help_text='Render ethical-pixel in ad templates. This is needed for users not using the ad client.')),
                ('sampled_ctr', models.FloatField(default=0.0, help_text='A periodically calculated CTR from a sample of ads on this publisher.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical publisher',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFlight',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Flight Slug')),
                ('start_date', models.DateField(db_index=True, default=datetime.date.today, help_text='This ad will not be shown before this date', verbose_name='Start Date')),
                ('end_date', models.DateField(default=adserver.models.default_flight_end_date, help_text='The target end date for the ad (it may go after this date)', verbose_name='End Date')),
                ('live', models.BooleanField(default=False, verbose_name='Live')),
                ('priority_multiplier', models.IntegerField(default=1, help_text="Multiplies chance of showing this flight's ads [1,1000000]", validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000000)], verbose_name='Priority Multiplier')),
                ('cpc', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Cost Per Click')),
                ('sold_clicks', models.PositiveIntegerField(default=0, verbose_name='Sold Clicks')),
                ('cpm', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Cost Per 1k Impressions')),
                ('sold_impressions', models.PositiveIntegerField(default=0, verbose_name='Sold Impressions')),
                ('targeting_parameters', jsonfield.fields.JSONField(blank=True, null=True, validators=[adserver.validators.TargetingParametersValidator()], verbose_name='Targeting parameters')),
                ('total_views', models.PositiveIntegerField(default=0, help_text='Views across all ads in this flight')),
                ('total_clicks', models.PositiveIntegerField(default=0, help_text='Clicks across all ads in this flight')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='adserver.Campaign')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical flight',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCampaign',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Campaign Slug')),
                ('campaign_type', models.CharField(choices=[('paid', 'Paid'), ('affiliate', 'Affiliate'), ('community', 'Community'), ('house', 'House')], default='paid', help_text='Most campaigns are paid but ad server admins can configure other lower priority campaign types.', max_length=20, verbose_name='Campaign Type')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('advertiser', models.ForeignKey(blank=True, db_constraint=False, help_text='The advertiser for this campaign.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='adserver.Advertiser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical campaign',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAdvertiser',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Advertiser Slug')),
                ('stripe_customer_id', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Stripe Customer ID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical advertiser',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAdvertisement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
                ('text', models.TextField(blank=True, help_text='For most ad types, the text should be less than 100 characters.', verbose_name='Text')),
                ('headline', models.CharField(blank=True, help_text='An optional headline at the beginning of the ad usually displayed in bold', max_length=200, null=True)),
                ('content', models.TextField(blank=True, help_text='For most ad types, the combined length of the headline, body, and call to action should be less than 100 characters.', null=True)),
                ('cta', models.CharField(blank=True, help_text='An optional call to action displayed at the end of the ad usually in bold', max_length=200, null=True, verbose_name='Call to action')),
                ('link', models.URLField(help_text="URL of your landing page. This may contain UTM parameters so you know the traffic came from us. The publisher will be added in the 'ea-publisher' query parameter.", max_length=255, verbose_name='Link URL')),
                ('image', models.TextField(blank=True, help_text='Sized according to the ad type', max_length=255, null=True, verbose_name='Image')),
                ('live', models.BooleanField(default=False, verbose_name='Live')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ad_type', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='adserver.AdType')),
                ('flight', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='adserver.Flight')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical advertisement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAdType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
                ('has_image', models.BooleanField(default=True, verbose_name='Has image?')),
                ('image_width', models.PositiveIntegerField(blank=True, null=True)),
                ('image_height', models.PositiveIntegerField(blank=True, null=True)),
                ('has_text', models.BooleanField(default=True, verbose_name='Has text?')),
                ('max_text_length', models.PositiveIntegerField(blank=True, help_text='Max length does not include HTML tags', null=True)),
                ('allowed_html_tags', models.CharField(blank=True, default='a b strong i em code', help_text='Space separated list of allowed HTML tag names', max_length=255, verbose_name='Allowed HTML tags')),
                ('default_enabled', models.BooleanField(default=False, help_text='Whether this ad type should default to checked when advertisers are creating ads')),
                ('template', models.TextField(blank=True, help_text='Override the template for rendering this ad type', null=True, verbose_name='Ad template')),
                ('description', models.CharField(blank=True, default='', help_text='A short description of the ad type to guide advertisers.', max_length=255)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('deprecated', models.BooleanField(default=False, help_text='Users cannot select deprecated ad types unless an ad is already that type.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical ad type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
