# Docker Compose Production Setup
#
# You probably will not use this (in whole anyway) in production.
# Instead you will use a combination of fully managed services
# such as managed Redis or managed Postgres or even a fully
# managed environment such as Heroku or Elastic Beanstalk.
#
# The following will need to be created for this environment to work:
# - ./.envs/production/

version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./docker-compose/production/django/Dockerfile
    image: ethicaladserver_production_django
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/production/.django
      - ./.envs/production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./docker-compose/production/postgres/Dockerfile
    image: ethicaladserver_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/production/.postgres

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    image: ethicaladserver_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: ethicaladserver_production_celerybeat
    command: /start-celerybeat
